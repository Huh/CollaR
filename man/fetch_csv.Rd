% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_csv.R
\name{fetch_csv}
\alias{fetch_csv}
\title{Read collar data stored in CSV file(s)}
\usage{
fetch_csv(file_path, skip = 0, ...)
}
\arguments{
\item{file_path}{The full path to one or more csv(s) to read}

\item{skip}{integer, the number of rows to skip at the top of the
file, see details}

\item{...}{Other parameters to pass to readr::read_csv}
}
\value{
a tibble
}
\description{
Read collar data stored in CSV file(s)
}
\examples{
#  Define file path
dir_path <- system.file(
  "extdata",
  package = "collar",
  mustWork = TRUE
)

# List files
fls <- get_paths(dir_path, ext = "csv$")

#  Read file
ltk <- fetch_csv(fls[1])

# Read first two files
all_ltk <- fetch_csv(fls[1:2])

# You might get into trouble if too many formats are contained in the same directory,
#  this will fail because column types are different. You could specify col_types
#  argument and pass it to readr::read_csv, but because different manufacturers use
#  different column names this won't work (col_types is not vectorized).
\dontrun{
all_fls <- fetch_csv(fls)
}

#  Example with large header, common with companies like Telonics
#  Read in data with header and use it to find first row in next step
r1 <- fetch_csv(fls[4])

# At this point you might print the first n rows of r1
# Then find where the data start or do the following to skip lines
tlncs <- fetch_csv(fls[4], skip = which(r1[,1] == "Acquisition Time"))

# However, a function is included in this package to help with this issue
# Beware that in some cases the algorithm that finds the first row of data
#  may be overly simplistic
cllr_remove_header(r1, col_nm = "Acquisition Time")

}
\seealso{
cllr_remove_header
}
